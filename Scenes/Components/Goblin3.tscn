[gd_scene load_steps=15 format=2]

[ext_resource path="res://Assets/goblin3.png" type="Texture" id=1]
[ext_resource path="res://Scripts/entity.gd" type="Script" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends Entity

var speed = 25
var path : = PoolVector2Array()

var damage_radius_bodies = []
var detect_radius_bodies = null
var in_hit_radius = false

var detect_name = \"Player\"

const max_damage = 15  # maximum damage per hit
const damage_time = 1  # hit every n seconds

var damage_timer = damage_time
var move = Vector2(0, 0)

func _ready():
	max_health = 50
	health = max_health
	ignore_projectile = false
	$AnimationPlayer.play(\"idle_front\")

func _process(delta):
	if health > 0:
		_process_damage_radius(delta)
		_process_detect_radius(delta)
		_process_animation()

func _process_damage_radius(delta):
	if health > 0:
		damage_timer -= delta
		
		if damage_timer < 0:
			damage_timer = damage_time
			var i = 0
			while i < damage_radius_bodies.size():
				damage_radius_bodies[i].heal(-max_damage)
				i += 1

func _process_detect_radius(delta):
	if detect_radius_bodies != null:
		var path = get_node(\"/root/Game/Navigation2D\") \\
			.get_simple_path(global_position, detect_radius_bodies.global_position)
		var distance_to_walk = speed * delta
		
		while distance_to_walk > 0 and path.size() > 0:
			var distance_to_next_point = global_position.distance_to(path[0])
			if distance_to_walk <= distance_to_next_point:
				position += position.direction_to(path[0]) * distance_to_walk
			else:
				position = path[0]
				path.remove(0)
			distance_to_walk -= distance_to_next_point
			
	#move = Vector2(0, 0)
	#if detect_radius_bodies != null:
	#	var ppos = detect_radius_bodies.global_position
	#	move = ppos - global_position
	#	if move.length() > 16:
	#		position += move.normalized() * delta * SPEED

func _process_animation():
	if health > 0:
		if in_hit_radius:
				if move.y > 0:
					$AnimationPlayer.play(\"hit_front\")
				else:
					$AnimationPlayer.play(\"hit_back\")
		else:
			if move.length() != 0:
				if move.x > 0:
					$AnimationPlayer.play(\"walk_side\")
					$PlayerSprite.flip_h = true
				else:
					$AnimationPlayer.play(\"walk_side\")
					$PlayerSprite.flip_h = false
				if move.y > 0:
					$AnimationPlayer.play(\"walk_front\")
					#$PlayerSprite.flip_h = false
				else:
					$AnimationPlayer.play(\"walk_back\")
					#$PlayerSprite.flip_h = false
			else:
				$AnimationPlayer.play(\"idle_front\")

func _on_DamageRadius_body_entered(body):
	if detect_name in body.name:
		damage_radius_bodies.append(body)
		damage_timer = 0.5
	in_hit_radius = true

func _on_DamageRadius_body_exited(body):
	if detect_name in body.name:
		damage_radius_bodies.erase(body)
	if damage_radius_bodies.size() == 0:
		in_hit_radius = false

func _on_DetectRadius_body_entered(body):
	if detect_name in body.name:
		detect_radius_bodies = body

func _on_DetectRadius_body_exited(body):
	if detect_name in body.name:
		detect_radius_bodies = null

func check_health():
	if health <= 0 and killable:
		$AnimationPlayer.play(\"dead\")

func _on_AnimationPlayer_animation_finished(anim_name):
	if anim_name == \"dead\":
		get_tree().queue_delete(self)
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 3.53287, 6.50826 )

[sub_resource type="CircleShape2D" id=3]
radius = 14.5718

[sub_resource type="CircleShape2D" id=4]
radius = 51.3636

[sub_resource type="Animation" id=5]
resource_name = "dead"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=6]
resource_name = "hit_back"
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 2, 15 ]
}

[sub_resource type="Animation" id=7]
resource_name = "hit_front"
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 3 ]
}

[sub_resource type="Animation" id=8]
resource_name = "hit_side"
length = 0.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 1, 9 ]
}

[sub_resource type="Animation" id=9]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 6 ]
}

[sub_resource type="Animation" id=10]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 14, 20 ]
}

[sub_resource type="Animation" id=11]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 12, 18 ]
}

[sub_resource type="Animation" id=12]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("PlayerSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 13, 19 ]
}

[node name="Goblin3" type="Area2D"]
script = SubResource( 1 )

[node name="PlayerSprite" type="Sprite" parent="."]
texture = ExtResource( 1 )
vframes = 4
hframes = 6
frame = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -1.5, 1.5 )
shape = SubResource( 2 )

[node name="DamageRadius" type="Area2D" parent="."]
script = ExtResource( 8 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DamageRadius"]
shape = SubResource( 3 )

[node name="DetectRadius" type="Area2D" parent="."]
script = ExtResource( 8 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="DetectRadius"]
position = Vector2( 0, -0.0701542 )
shape = SubResource( 4 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/dead = SubResource( 5 )
anims/hit_back = SubResource( 6 )
anims/hit_front = SubResource( 7 )
anims/hit_side = SubResource( 8 )
anims/idle_front = SubResource( 9 )
anims/walk_back = SubResource( 10 )
anims/walk_front = SubResource( 11 )
anims/walk_side = SubResource( 12 )
[connection signal="body_entered" from="DamageRadius" to="." method="_on_DamageRadius_body_entered"]
[connection signal="body_exited" from="DamageRadius" to="." method="_on_DamageRadius_body_exited"]
[connection signal="body_entered" from="DetectRadius" to="." method="_on_DetectRadius_body_entered"]
[connection signal="body_exited" from="DetectRadius" to="." method="_on_DetectRadius_body_exited"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
